For each of the following expressions, indicate the value returned, or if the evaluation would lead to an error,
 write the word 'error' (note this is a word, not a string, no quotes).
 
Q1:  "a" + "bc"         = abc
Q2:   3 * "bc"          = bcbcbc   
Q3:   "abcd"[2]         = c
Q4:   "abcd"[0:2]       = ab
Q5:   "abcd"[:2]        = ab
Q6:   "abcd"[2:]        = cd
Q7:   "3" * "bc"        = Error



For each of the expressions below, specify its type and value. If it generates an error, select type 'NoneType' and 
  write the word 'error' (note this is a word, not a string, no quotes) in the box for the value.

Assume we've made the following assignments:
                > str1 = 'hello'
                > str2 = ','
                > str3 = 'world'
  
Q1:   str1      = string Hello
Q2:   str1[0]   = string  h
Q3:   str1[1]   = string  e
Q4:   str1[-1]  = string  o
Q5:   len(str1) = int     5


For each of the following expressions, indicate the value that prints out when the expression is evaluated.
If the evaluation would lead to an error, write the word 'error'; if nothing would print out, write the word 'blank'.

Q1: 
  if 6 > 7:
   print("Yep")
                    Ans:blank
Q2:
  if 6 > 7:
   print("Yep")
else:
   print("Nope")  
                    Ans: Nope
Q3:
    var = 'Panda'
if var == "panda":
   print("Cute!")
elif var == "Panda":
   print("Regal!")
else:
   print("Ugly...")
                      Ans: Rehal!
Q4:
    temp = 120
if temp > 85:
   print("Hot")
elif temp > 100:
   print("REALLY HOT!")
elif temp > 60:
   print("Comfortable") 
else:
   print("Cold")
                      Ans: Hot
Q5: 
    temp = 50
if temp > 85:
   print("Hot")
elif temp > 100:
   print("REALLY HOT!")
elif temp > 60:
   print("Comfortable")
else:
   print("Cold")
                      Ans:Cold
                      
                      
                      
Write a piece of Python code that prints out the string hello world:
Code: 
x = "hello world"
print(x)



Write a piece of Python code that prints out the string 'hello world' if the value of an integer variable, happy,
is strictly greater than 2.

Code: 
if happy>2:
  print("hello world")



Assume that two variables, varA and varB, are assigned values, either numbers or strings.

Write a piece of Python code that evaluates varA and varB, and then prints out one of the following messages:

"string involved" if either varA or varB are strings

"bigger" if varA is larger than varB

"equal" if varA is equal to varB

"smaller" if varA is smaller than varB


Code:
if type(varA)==str or type(varB)==str:
  print("string involved")
else:
  if varA>varB:
    print("bigger")
  elif varA==varB:
    print("equal")
  else:
    print("smaller")
    
    

Below are some short Python programs. For each program, answer the associated question.

Code 1: 
num = 0
while num <= 5:
    print(num)
    num += 1

print("Outside of loop")
print(num) 

                          Ans: 0, 1, 2, 3, 4, 5, Outside of loop, 6

Code 2: 
numberOfLoops = 0
numberOfApples = 2
while numberOfLoops < 10:
    numberOfApples *= 2
    numberOfApples += numberOfLoops
    numberOfLoops -= 1
print("Number of apples: " + str(numberOfApples))

                          Ans: infinite loop

Code 3: 
num = 10
while num > 3:
    num -= 1
    print(num) 
      
                          Ans: 9, 8, 7,  6, 5, 4, 3
                          
Code 4: 
num = 10
while True:
    if num < 7:
        print('Breaking out of loop')
        break
    print(num)
    num -= 1
print('Outside of loop')
    
                          Ans: 10, 9, 8, 7,  Breaking out of loop, Outside of loop

Code 5: 
num = 100
while not False:
    if num < 0:
        break
print('num is: ' + str(num))

                          Ans: infinite loop


In this problem you'll be given a chance to practice writing some while loops.

1. Convert the following into code that uses a while loop.

print 2
prints 4
prints 6
prints 8
prints 10
prints Goodbye!

Code: 
x=2 
while(x <=10):
  print(x)
  x=x+2
print("Goodbye!")


2. Convert the following into code that uses a while loop.

prints Hello!
prints 10
prints 8
prints 6
prints 4
prints 2


Code: 
x=10 
print("Hello!")
while(x > 0): 
  print(x)
  x -= 2;



3. Write a while loop that sums the values 1 through end, inclusive. end is a variable that we define for you. So, 
for example, if we define end to be 6, your code should print out the result:

21
which is 1 + 2 + 3 + 4 + 5 + 6.
For problems such as these, do not include input statements or define variables we will provide for you. Our 
automating testing will provide values so write your code in the following box assuming these variables are already 
defined.

Code: 
end=end
current =1
temp = 0
while current <= end :
    temp+=current
    current+=1
print(str(temp))




In this problem you'll be given a chance to practice writing some for loops.

1. Convert the following code into code that uses a for loop.

prints 2
prints 4
prints 6
prints 8
prints 10
prints Goodbye!


Code: 
for a in range(2,12,2):
  print(a)
print("Goodbye!")



2. Convert the following code into code that uses a for loop.

prints Hello!
prints 10
prints 8
prints 6
prints 4
prints 2


Code: 
print("Hello!")
for x in range(10,0,-2):
  print(x)


3. Write a for loop that sums the values 1 through end, inclusive. end is a variable that we define for you. So, 
for example, if we define end to be 6, your code should print out the result:

21
which is 1 + 2 + 3 + 4 + 5 + 6.

For problems such as these, do not include input statements or define variables we will provide for you. Our 
automating testing will provide values so write your code in the following box assuming these variables are already 
defined.

Code: 
total = 0
for i in range(1, end+1):
    total += i
print(total)




Below are some short Python programs. For each program, answer the associated question.

Code 1:
num = 10
for num in range(5):
    print(num)
print(num)
                          Ans:  0, 1, 2, 3, 4, 4

Code 2:
divisor = 2
for num in range(0, 10, 2):
    print(num/divisor) 
                          Ans: 0.0, 1.0, 2.0, 3.0, 4.0

Code 3: 
for variable in range(20):
    if variable % 4 == 0:
        print(variable)
    if variable % 16 == 0:
        print('Foo!') 
                          Ans: 0, Foo!, 4, 8, 12, 16, Foo!

Code 4:
for letter in 'hola':
    print(letter)
                          Ans: h, o, l, a

Code 5: 
count = 0
for letter in 'Snow!':
    print('Letter # ' + str(count) + ' is ' + str(letter))
    count += 1
    break
print(count)
                          Ans: Letter # 0 is S, 1



Below are some short Python programs. For each program, answer the associated questions.


Code 1: 
myStr = '6.00x'

for char in myStr:
    print(char)

print('done')
                          1: How many times does 6 print out?
                                      1
                          2: How many times does . print out?
                                      1
                          3: How many times does 0 print out?
                                      2
                          4: How many times does x print out?
                                      1
                          5: How many times does done print out?
                                      1

Code 2: 
greeting = 'Hello!'
count = 0

for letter in greeting:
    count += 1
    if count % 2 == 0:
        print(letter)
    print(letter)

print('done')


                            1: How many times does H print out?
                                            1
                            2: How many times does e print out? Disregard the letters in the word done.
                                            2
                            3: How many times does l print out?
                                            3
                            4: How many times does o print out? Disregard the letters in the word done.
                                            1
                            5: How many times does ! print out?
                                            2
                            6: How many times does done print out?
                                            1
                                            
                                            
Code 3: 
school = 'Massachusetts Institute of Technology'
numVowels = 0
numCons = 0

for char in school:
    if char == 'a' or char == 'e' or char == 'i' \
       or char == 'o' or char == 'u':
        numVowels += 1
    elif char == 'o' or char == 'M':
        print(char)
    else:
        numCons -= 1

print('numVowels is: ' + str(numVowels))
print('numCons is: ' + str(numCons))


                              1: How many times does o print out? Disregard the o's in last two print statements.
                                               0
                              2: How many times does M print out?
                                               1
                              3: What will the value of the variable numVowels be?
                                               11
                              4: What will the value of the variable numCons be?
                                              -25
                            


Here is some code:

Code Sample

iteration = 0
count = 0
while iteration < 5:
    for letter in "hello, world":
        count += 1
    print("Iteration " + str(iteration) + "; count is: " + str(count))
    iteration += 1 
    
We wish to re-write the above code, but instead of nesting a for loop inside a while loop, we want to nest a while 
loop inside a for loop. Which of the following loops gives the same output as the Code Sample?

Try to answer the following questions by just reading the code. Reading code is a very good skill to have (and will 
help you both in your programming career and on your exams!). It is okay to check your answers that you obtain from 
just reading the code, then in your interpreter run the code for the ones you got wrong on your first attempt.

Test 1

for iteration in range(5):
    count = 0
    while True:
        for letter in "hello, world":
            count += 1
        print("Iteration " + str(iteration) + "; count is: " + str(count))

No, Test 1 does not give the same output as the Code Sample


Test 2

for iteration in range(5):
    count = 0
    while True:
        for letter in "hello, world":
            count += 1
        print("Iteration " + str(iteration) + "; count is: " + str(count))
        break

No, Test 2 does not give the same output as the Code Sample

Test 3

count = 0
phrase = "hello, world"
for iteration in range(5):
    index = 0
    while index < len(phrase):
        count += 1
        index += 1
    print("Iteration " + str(iteration) + "; count is: " + str(count))

Yes, Test 3 gives the same output as the Code Sample


Test 4

count = 0
phrase = "hello, world"
for iteration in range(5):
    while True:
        count += len(phrase)
        break
    print("Iteration " + str(iteration) + "; count is: " + str(count))

Yes, Test 3 gives the same output as the Code Sample


Test 5

count = 0
phrase = "hello, world"
for iteration in range(5):
    count += len(phrase)
    print("Iteration " + str(iteration) + "; count is: " + str(count))


Yes, Test 3 gives the same output as the Code Sample






